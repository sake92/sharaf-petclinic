package ba.sake.sharaf.petclinic.web.models

import java.time.LocalDate
import io.scalaland.chimney.dsl.*
import ba.sake.formson.FormDataRW
import ba.sake.validson.Validator
import ba.sake.sharaf.petclinic.common.*
import ba.sake.sharaf.petclinic.domain.models.Pet

// create/edit pet form data
case class UpsertPetForm(
    name: String,
    birthDate: LocalDate,
    petType: PetType
) derives FormDataRW:
  // dummy id -1, it gets autogenerated in db..
  def toNewPet: Pet =
    Pet(-1, name, birthDate, petType, Seq.empty)

object UpsertPetForm:

  val empty = UpsertPetForm("", LocalDate.now(), PetType.bird)

  def fromPet(p: Pet): UpsertPetForm = p.transformInto[UpsertPetForm]

  given Validator[UpsertPetForm] = Validator
    .derived[UpsertPetForm]
    .and(_.name, !_.isBlank(), "must not be blank")
    .and(_.birthDate, _.isBefore(LocalDate.now()), "must be in the past")
